// Mixins | WhiteLabel MarkUp v2.1.0 Atomic Ghost | 26/5/19

@mixin responsive-font($min-vw: 320px, $max-vw: 1440px, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: pxtorem($min-font-size);
      line-height: lhtorem($min-font-size);

      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{units($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{units($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: pxtorem($max-font-size);
        line-height: lhtorem($max-font-size);
      }
    }
  }
}

@mixin FontSmoothing {

    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    font-smoothing: antialiased;
    -webkit-font-smoothing: antialiased;
    text-shadow: rgba(0, 0, 0, .01) 0 0 1px;

}

@mixin OrcaMarginReset {

    &:first-child {

        margin-left: 0px;

    }
}

@mixin WidgetBottomSpace {

    margin-bottom: 5%;
    margin-top: 5%;

}

@mixin ButtonBorder {

        border-radius: 50px;
        border: 2px solid white;

}

@mixin RoundedModify($TopLeft:20px, $TopRight:20px, $BottomLeft:20px, $BottomRight:20px) {
    border-radius: $TopLeft $TopRight $BottomLeft $BottomRight;
}

@mixin Shadow {
    text-shadow: #464646 1px 1px 10px;
}

/* Global components map
======================== */

// $components : () !global;


// /* Mixin to add component
// ========================= */

// @mixin add-component($componentName, $componentVariationName: "default", $componentVariationOptions: ()) {
//   $components: map-merge($components, (
//       #{$componentName}: (
//         $componentVariationName: $componentVariationOptions
//       )
//   )) !global;
// }


// /* Mixin to extend global components map
// ======================================== */

// @mixin core-extend($componentName, $componentVariationName, $componentVariationOptions){
//     // $components(all) > $component(ex: "inlineList") > $componentVariationName(ex: "dashboardModulesList")
//     $components: core-extend($componentName, $componentVariationName, $componentVariationOptions);
// }


// /* Utils function to merge component options
// ============================================ */

// @function core-extend($componentName, $componentVariationName, $componentVariationOptions){
//     $component: map-get($components, $componentName);
//     $componentVariation: map-get($component, $componentVariationName);

//     $newComponentVariation: map-merge($componentVariation, $componentVariationOptions);
//     $newComponent: map-merge($component, ($componentVariationName: $newComponentVariation));

//     @return map-merge($components, ($componentName: $newComponent));
// }
